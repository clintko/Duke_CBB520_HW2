{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from Bio.Seq import Seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA\n",
      "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\n"
     ]
    }
   ],
   "source": [
    "read1 = \"AGATCGGAAGAGCACACGTCTGAACTCCAGTCA\"\n",
    "read2 = \"AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\"\n",
    "\n",
    "seq1 = Seq(read1)\n",
    "seq2 = Seq(read2)\n",
    "\n",
    "print(seq1)\n",
    "print(seq2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Seq('TCTAGCCTTCTCGTGTGCAGACTTGAGGTCAGT')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq1.complement()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Seq('TGACTGGAGTTCAGACGTGTGCTCTTCCGATCT')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq1.reverse_complement()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Seq('ACACTCTTTCCCTACACGACGCTCTTCCGATCT')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq2.reverse_complement()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%bash\n",
    "source config.sh\n",
    "cat > $MYINFO/TruSeq_adapter.fasta << EOF\n",
    "> TruSeq read1\n",
    "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA\n",
    "> TruSeq read2\n",
    "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\n",
    "> TruSeq read1 rc\n",
    "TGACTGGAGTTCAGACGTGTGCTCTTCCGATCT\n",
    "> TruSeq read2 rc\n",
    "ACACTCTTTCCCTACACGACGCTCTTCCGATCT\n",
    "EOF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
